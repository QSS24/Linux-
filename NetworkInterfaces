InteractingWithInterfaces.sh

#!/bin/bash
set -x
Declare Q = [punc]
Logger = Datetime(time)
ErrTrace = { ' Errtrace ${ Int_Brief, Assign_Subnet } '
    For each er in $ErrTrace == ' $ErrTrace[er] | Less > $Logger(ErrLog.txt) '
    Throw Error as er:
       Print('Please correct these erros:' Enumerate( ErrLog.txt ))  
   }
Global: 
   Declare -i host = { Echo ' host ip:' }
           -i user = { Echo ' user ip:' }
           -i port = { Echo ' port ip:' }
           -a Domain = { ... } 
Int_Brief() { 
   Check_Interfaces = { netcat -ls && re.match('\D*{[A-Z|a-z]{2}\:}'g)\n
     <ip>@<host>:port | less sort -nr 10 { print $1$Q $2$Q $3$Q %s (format %host %user %port)}
     }
   NIDevices = {
       Encrypt() ' macchanger -ls && attr -ha | less sort -nr -10 ' do:
           for Case $(Encrypt) in: 
             a) if macaddr && ttl == 2hrs;
                  exec -
       Return ${ NIDevices }
       }  
}
Scan_Router () { 
   _Check_Router = 'Nmap -a | exec ' for a, sky, sinners  in $Domain' \n
   Try: 
   if $Domain[a::1] && sort -nr 10 > $Logger(

Def Config_VLSM() {
   Assign_Subnet = ' sh int brief details eth* (print '$1$Q $2$Q $3$Q').format(Eth*[1-9]) ' \n
       exec assign $host $subnet " for Input(' ') "   \n
       will complete it later
       
       
       Try: 
         For a, b, c in $Eth/[0-9] 
            do Eth[a::1] > 
              
          
